basePath: /
definitions:
  models.Segment:
    properties:
      slug:
        type: string
      user_percent:
        type: integer
    type: object
  segment.CreateRequest:
    properties:
      slug:
        example: AVITO_VOICE_MESSAGES
        minLength: 3
        type: string
      user_percent:
        example: 50
        maximum: 100
        minimum: 1
        type: integer
    required:
    - slug
    type: object
  segment.DeleteRequest:
    properties:
      slug:
        example: AVITO_VOICE_MESSAGES
        minLength: 3
        type: string
    required:
    - slug
    type: object
  segment.UpdateUserSegmentsRequest:
    properties:
      add_segments:
        example:
        - AVITO_VOICE_MESSAGES
        - AVITO_DISCOUNT_50
        items:
          type: string
        type: array
      delete_segments:
        example:
        - AVITO_DISCOUNT_10
        items:
          type: string
        type: array
      ttl:
        example: 1000
        minimum: 1
        type: integer
      user_id:
        example: 1
        minimum: 1
        type: integer
    required:
    - user_id
    type: object
host: localhost:8080
info:
  contact: {}
  description: Тествое задание для стажировки Avitotech 2023
  title: Avitotech Test 2023 API
  version: "1.0"
paths:
  /segment:
    delete:
      consumes:
      - application/json
      description: Метод удаления сегмента. Принимает slug (название) сегмента.
      parameters:
      - description: Данные сегмента
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/segment.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Not Found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Удаление сегмента
      tags:
      - Segment
    post:
      consumes:
      - application/json
      description: |-
        Метод создания сегмента. Принимает slug (название) сегмента.
        Если указан user_percent, то сегмент будет добавлен случайным пользователям в заданном проценте от общего числа.
      parameters:
      - description: Запрос на создание
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/segment.CreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              created_at:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Создание сегмента
      tags:
      - Segment
  /segment/history/{userId}:
    get:
      description: 'Метод получения истории сегментов пользователя за указанный месяц
        и год. На вход: год и месяц. На выходе ссылка на CSV файл.'
      parameters:
      - description: id пользователя
        in: path
        name: userId
        required: true
        type: string
      - description: месяц
        in: query
        name: month
        required: true
        type: integer
      - description: год
        in: query
        name: year
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              report:
                type: string
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Получение истории сегментов пользователя
      tags:
      - Segment
  /segment/reports/{fileName}:
    get:
      description: |-
        Метод скачивания csv отчета по истории сегментов пользователя.
        Отчет в формате: идентификатор пользователя 1;сегмент1;операция (добавление = 'I' / удаление = "D");дата и время
      parameters:
      - description: file_name.csv
        in: path
        name: fileName
        required: true
        type: string
      produces:
      - text/csv
      responses:
        "200":
          description: OK
          headers:
            Content-Disposition:
              description: attachment;filename=file_name
              type: string
            Content-Type:
              description: text/csv
              type: string
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Скачивание отчета
      tags:
      - Segment
  /segment/user:
    post:
      consumes:
      - application/json
      description: |-
        Метод добавления пользователя в сегмент. Принимает массив slug (названий) сегментов которые нужно добавить пользователю,
        массив slug (названий) сегментов которые нужно удалить у пользователя, id пользователя, ttl (в секундах).
      parameters:
      - description: Данные сегмента и пользователя
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/segment.UpdateUserSegmentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              segments_added:
                type: integer
              segments_deleted:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Добавление/удаление сегментов у пользователя
      tags:
      - Segment
  /segment/user/{userId}:
    get:
      description: Метод получения активных сегментов пользователя. Принимает на вход
        id пользователя.
      parameters:
      - description: id пользователя
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Segment'
            type: array
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Получение сегментов пользователя
      tags:
      - Segment
  /user:
    post:
      description: |-
        Метод создания пользователя.
        Используется в случае необходимости вручную добавить пользователя, так как при добавлении сегмента пользователь сохраняется автоматически.
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            properties:
              user_id:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Создание пользователя
      tags:
      - User
swagger: "2.0"
